// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "28.0.3"
        minSdkVersion = 16
        compileSdkVersion = 28
        targetSdkVersion = 28
        
    }
    repositories {
        google()
        mavenLocal()
        jcenter()

      
    }
    dependencies {
        
          classpath 'com.android.support:multidex:1.0.3'
        classpath( 'com.google.android.gms:play-services-auth:8.3.0')
        classpath("com.android.tools.build:gradle:3.4.2")
//        classpath ('com.google.gms:google-services:4.2.0')
        classpath 'com.google.gms:google-services:4.2.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven { url "http://dl.bintray.com/populov/maven" }
        maven {
             url  "https://www.jitpack.io"
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm

        }
        maven {url   "$rootDir/../node_modules/react-native/android" }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        maven { url "https://maven.google.com" } // Google's Maven repository - FCM
        maven {
            url 'https://dl.bintray.com/azeesoft/maven'
        }
        mavenCentral()
        google()
        jcenter()

    }
}

subprojects {
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
              
                compileSdkVersion 28     // have to match with build.gradle and app/build.gradle ones
                buildToolsVersion '28.0.3'  // have to match with build.gradle and app/build.gradle ones
                variantFilter { variant ->
                    def names = variant.flavors*.name
                    // To check for a certain build type, use variant.buildType.name == "<buildType>"
                    if (names.contains("reactNative51") || names.contains("reactNative55") || names.contains("reactNative56")) {
                        // Gradle ignores any variants that satisfy the conditions above.
                        setIgnore(true)
                    }
                }
            }
        }
    }
}